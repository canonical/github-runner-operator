{"uid":"c34b7967096c43ec","name":"test_runner_normal_idle_lifecycle","fullName":"tests.integration.test_runner_manager_openstack#test_runner_normal_idle_lifecycle","historyId":"ddfb75390f3b60cd2b4e33b7c7793615","time":{},"description":"\n    Arrange: RunnerManager instance with no runners.\n    Act:\n        1. Create one runner.\n        2. Run health check on the runner.\n        3. Run cleanup.\n        4. Delete all idle runner.\n    Assert:\n        1. An active idle runner.\n        2. Health check passes.\n        3. One idle runner remains.\n        4. No runners.\n    ","descriptionHtml":"<pre><code>Arrange: RunnerManager instance with no runners.\nAct:\n    1. Create one runner.\n    2. Run health check on the runner.\n    3. Run cleanup.\n    4. Delete all idle runner.\nAssert:\n    1. An active idle runner.\n    2. Health check passes.\n    3. One idle runner remains.\n    4. No runners.\n</code></pre>\n","status":"unknown","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"abort_on_fail"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"openstack"},{"name":"parentSuite","value":"tests.integration"},{"name":"suite","value":"test_runner_manager_openstack"},{"name":"host","value":"github-runner"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.test_runner_manager_openstack"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":5,"broken":17,"skipped":0,"passed":8,"unknown":8,"total":38},"items":[{"uid":"c37a916d3ca39f1a","reportUrl":"../1724//#testresult/c37a916d3ca39f1a","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1736662978633,"stop":1736662979020,"duration":387}},{"uid":"5a5da3932ad95535","reportUrl":"../1723//#testresult/5a5da3932ad95535","status":"passed","time":{"start":1736619771768,"stop":1736620062206,"duration":290438}},{"uid":"8fca1bde56c87851","reportUrl":"../1722//#testresult/8fca1bde56c87851","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1736609113932,"stop":1736609114352,"duration":420}},{"uid":"817c2382e5cb6aee","reportUrl":"../1718//#testresult/817c2382e5cb6aee","status":"unknown","time":{}},{"uid":"77a3731bbc166ba9","reportUrl":"../1717//#testresult/77a3731bbc166ba9","status":"failed","statusDetails":"AssertionError: assert 0 == 1\n +  where 0 = len(())","time":{"start":1736467478348,"stop":1736467787952,"duration":309604}},{"uid":"943f10a46bff29ca","reportUrl":"../1714//#testresult/943f10a46bff29ca","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1736408458853,"stop":1736408459264,"duration":411}},{"uid":"e3adad0360938284","reportUrl":"../1713//#testresult/e3adad0360938284","status":"unknown","time":{}},{"uid":"2f4aea54e1e0d420","reportUrl":"../1710//#testresult/2f4aea54e1e0d420","status":"passed","time":{"start":1736330280483,"stop":1736330559633,"duration":279150}},{"uid":"ca3b2e57437c1390","reportUrl":"../1708//#testresult/ca3b2e57437c1390","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1736274285380,"stop":1736274285771,"duration":391}},{"uid":"a18bca8d16060d64","reportUrl":"../1698//#testresult/a18bca8d16060d64","status":"failed","statusDetails":"AssertionError: assert 0 == 1\n +  where 0 = len(())","time":{"start":1735842222289,"stop":1735842223315,"duration":1026}},{"uid":"69268af75a26be2d","reportUrl":"../1697//#testresult/69268af75a26be2d","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1735799071838,"stop":1735799072228,"duration":390}},{"uid":"47e46c96caa4b2f1","reportUrl":"../1696//#testresult/47e46c96caa4b2f1","status":"unknown","time":{}},{"uid":"d1940dc8609e2bac","reportUrl":"../1695//#testresult/d1940dc8609e2bac","status":"failed","statusDetails":"AssertionError: assert 0 == 1\n +  where 0 = len(())","time":{"start":1735722148213,"stop":1735722149192,"duration":979}},{"uid":"ea23b75a36179228","reportUrl":"../1694//#testresult/ea23b75a36179228","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1735669412788,"stop":1735669413179,"duration":391}},{"uid":"a03e942062aa0123","reportUrl":"../1693//#testresult/a03e942062aa0123","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1735626225333,"stop":1735626225818,"duration":485}},{"uid":"7771bb2a34852a8b","reportUrl":"../1692//#testresult/7771bb2a34852a8b","status":"unknown","time":{}},{"uid":"ee189770d2ae7837","reportUrl":"../1691//#testresult/ee189770d2ae7837","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1735552480741,"stop":1735552481141,"duration":400}},{"uid":"43a848d41ba75e7d","reportUrl":"../1690//#testresult/43a848d41ba75e7d","status":"broken","statusDetails":"TimeoutError","time":{"start":1735505574502,"stop":1735506529196,"duration":954694}},{"uid":"d2dc7e3c286d0bf4","reportUrl":"../1689//#testresult/d2dc7e3c286d0bf4","status":"broken","statusDetails":"github_runner_manager.errors.TokenError: Invalid token.","time":{"start":1735453400035,"stop":1735453400440,"duration":405}},{"uid":"880c1d6e534e2dcc","reportUrl":"../1688//#testresult/880c1d6e534e2dcc","status":"failed","statusDetails":"AssertionError: assert 0 == 1\n +  where 0 = len(())","time":{"start":1735413465854,"stop":1735413775708,"duration":309854}}]},"tags":["asyncio","abort_on_fail","openstack"]},"source":"c34b7967096c43ec.json","parameterValues":[]}