# coding: utf-8

"""
    Job Manager API

    A modern job management system

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from jobmanager_client.models.job_create import JobCreate  # noqa: E501

class TestJobCreate(unittest.TestCase):
    """JobCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobCreate:
        """Test JobCreate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobCreate`
        """
        model = JobCreate()  # noqa: E501
        if include_optional:
            return JobCreate(
                requested_by = '',
                repository_url = '',
                repository_ref = '',
                architecture = '',
                base_series = '',
                vm_dependencies = None,
                commands = [
                    null
                    ],
                secrets = { },
                environment = { },
                artifacts_dir = '',
                topology = '',
                vm_ip = '',
                vm_size = '',
                status = '',
                artifact_urls = [
                    null
                    ],
                log_urls = [
                    null
                    ]
            )
        else:
            return JobCreate(
                requested_by = '',
                architecture = '',
                base_series = '',
        )
        """

    def testJobCreate(self):
        """Test JobCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
