"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"
    Arrange: RunnerManager instance with no runners.
    Act: Get runners.
    Assert: Empty tuple returned.
    ","4038","test_get_no_runner","tests.integration","Fri Dec 20 18:24:37 UTC 2024","passed","Fri Dec 20 18:24:42 UTC 2024","","test_runner_manager_openstack","",""
"
    Arrange: RunnerManager instance with no runners.
    Act:
        1. Create one runner.
        2. Run health check on the runner.
        3. Run cleanup.
        4. Delete all idle runner.
    Assert:
        1. An active idle runner.
        2. Health check passes.
        3. One idle runner remains.
        4. No runners.
    ","326483","test_runner_normal_idle_lifecycle","tests.integration","Fri Dec 20 18:24:42 UTC 2024","passed","Fri Dec 20 18:30:08 UTC 2024","","test_runner_manager_openstack","",""
"
    arrange: given an integrated GitHub-Runner charm and tmate-ssh-server charm with a denylist         covering ip ranges of tmate-ssh-server.
    act: when canonical/action-tmate is triggered.
    assert: the ssh connection info from action-log and tmate-ssh-server matches.
    ","874171","test_ssh_debug","tests.integration","Fri Dec 20 18:31:10 UTC 2024","passed","Fri Dec 20 18:45:44 UTC 2024","","test_debug_ssh","",""
"
    arrange: A properly integrated charm with a runner registered on the fork repo.
    act: Dispatch a workflow on a branch for the runner to run. After completion, reconcile.
    assert: The RunnerStart, RunnerStop and Reconciliation metric is logged.
        The Reconciliation metric has the post job status set to normal.
    ","612130","test_charm_issues_metrics_after_reconciliation","tests.integration","Fri Dec 20 19:17:07 UTC 2024","passed","Fri Dec 20 19:27:19 UTC 2024","","test_charm_metrics_success","",""
"
    arrange: given latest stable version of the charm.
    act: charm upgrade is called.
    assert: the charm is upgraded successfully.
    ","888349","test_charm_upgrade","tests.integration","Fri Dec 20 18:41:51 UTC 2024","passed","Fri Dec 20 18:56:39 UTC 2024","","test_charm_upgrade","",""
"
    Arrange: RunnerManager instance with no runners.
    Act:
        1. Create two runner.
        2. Delete all idle runner.
    Assert:
        1. Two active idle runner.
        2. No runners.
    ","304948","test_runner_spawn_two","tests.integration","Fri Dec 20 18:48:31 UTC 2024","failed","Fri Dec 20 18:53:36 UTC 2024","","test_runner_manager_openstack","",""
"
    arrange: A working application with one runner.
    act:
        1.  a. Crash/delete the one runner
        2.  Wait for 6 minutes, and then wait for ActiveStatus.
    assert:
        1. a. No runner exists.
        2. a. One runner exists. The runner name should not be the same as the starting one.

    This tests whether the reconcile-runner event is triggered, and updates the dependencies.
    The reconciliation logic is tested with the reconcile-runners action.
    ","623896","test_update_interval","tests.integration","Fri Dec 20 19:00:18 UTC 2024","passed","Fri Dec 20 19:10:42 UTC 2024","","test_charm_scheduled_events","",""
"
    Arrange: RunnerManager with one idle runner.
    Act:
        1. Run a long workflow.
        3. Run flush idle runner.
        4. Run flush busy runner.
    Assert:
        1. Runner takes the job and become busy.
        3. Busy runner still exists.
        4. No runners exists.
    ","0","test_runner_flush_busy_lifecycle","tests.integration","Fri Dec 20 18:30:08 UTC 2024","failed","Fri Dec 20 18:30:08 UTC 2024","","test_runner_manager_openstack","",""
"
    arrange: Scale down the number of virtual machines to 2 and spawn a job.
    act:
        1. Scale down the number of virtual machines to 0 and call reconcile.
        2. Spawn a job.
    assert:
        1. The job fails.
        2. The job is queued and there is a message in the queue.
    ","1063875","test_reactive_mode_scale_down","tests.integration","Fri Dec 20 19:44:12 UTC 2024","passed","Fri Dec 20 20:01:56 UTC 2024","","test_reactive","",""
"
    Arrange: RunnerManager with one runner. Clean metric logs.
    Act:
        1. Start a test workflow for the runner.
        2. Run cleanup.
    Assert:
        1. The workflow complete successfully.
        2. The runner should be deleted. The metrics should be recorded.
    ","43582","test_runner_normal_lifecycle","tests.integration","Fri Dec 20 18:47:47 UTC 2024","passed","Fri Dec 20 18:48:31 UTC 2024","","test_runner_manager_openstack","",""
"
    arrange: A working application with one runner with repo policy enabled.
    act: Dispatch a workflow.
    assert: Workflow run successfully passed.
    ","0","test_repo_policy_enabled","tests.integration","Fri Dec 20 19:39:43 UTC 2024","skipped","Fri Dec 20 19:39:43 UTC 2024","","test_charm_runner","",""
"
    arrange: A charm integrated with grafana-agent using the cos-agent integration.
    act: Config the charm to contain one runner.
    assert: The RunnerInstalled metric is logged.
    ","203541","test_charm_issues_runner_installed_metric","tests.integration","Fri Dec 20 19:13:39 UTC 2024","passed","Fri Dec 20 19:17:02 UTC 2024","","test_charm_metrics_success","",""
"
    arrange: Place a message with an unsupported label in the queue and dispatch a workflow.
    act: Call reconcile.
    assert: No runner is spawned and the message is not requeued.
    ","23577","test_reactive_mode_does_not_consume_jobs_with_unsupported_labels","tests.integration","Fri Dec 20 19:41:55 UTC 2024","passed","Fri Dec 20 19:42:19 UTC 2024","","test_reactive","",""
"
    arrange: A properly integrated charm with a runner registered on the fork repo.
    act: Dispatch a test workflow that fails the repo-policy check. After completion, reconcile.
    assert: The RunnerStart, RunnerStop and Reconciliation metric is logged.
        The Reconciliation metric has the post job status set to failure.
    ","558937","test_charm_issues_metrics_for_failed_repo_policy","tests.integration","Fri Dec 20 18:58:27 UTC 2024","passed","Fri Dec 20 19:07:46 UTC 2024","","test_charm_metrics_failure","",""
"
    arrange: A properly integrated charm with a runner registered on the fork repo.
    act: Dispatch a test workflow and afterwards kill run.sh. After that, reconcile.
    assert: The RunnerStart, RunnerStop and Reconciliation metric is logged.
        The Reconciliation metric has the post job status set to Abnormal.
    ","330045","test_charm_issues_metrics_for_abnormal_termination","tests.integration","Fri Dec 20 19:08:33 UTC 2024","passed","Fri Dec 20 19:14:03 UTC 2024","","test_charm_metrics_failure","",""
"
    arrange: Place a message in the queue and dispatch a workflow.
    act: Call reconcile.
    assert: A runner is spawned to process the job and the message is removed from the queue.
        The metrics are logged.
    ","430987","test_reactive_mode_spawns_runner","tests.integration","Fri Dec 20 19:33:00 UTC 2024","passed","Fri Dec 20 19:40:11 UTC 2024","","test_reactive","",""
"
    arrange: A working application with one runner.
    act: Run check_runner action.
    assert: Action returns result with one runner.
    ","6050","test_check_runner","tests.integration","Fri Dec 20 19:17:03 UTC 2024","passed","Fri Dec 20 19:17:09 UTC 2024","","test_charm_runner","",""
"
    arrange: A working application with one runner.
    act:
        1. Run Check_runner action. Record the runner name for later.
        2. Nothing.
        3. Change the virtual machine resource configuration.
        4. Run flush_runner action.
        5. Dispatch a workflow to make runner busy and call flush_runner action.

    assert:
        1. One runner exists.
        2. Check the resource matches the configuration.
        3. Nothing.
        4.  a. The runner name should be different to the runner prior running
                the action.
            b. LXD profile matching virtual machine resources of step 2 exists.
        5. The runner is not flushed since by default it flushes idle. (Only valid for OpenStack)

    Test are combined to reduce number of runner spawned.
    ","5042","test_flush_runner_and_resource_config","tests.integration","Fri Dec 20 19:38:54 UTC 2024","failed","Fri Dec 20 19:38:59 UTC 2024","","test_charm_runner","",""
"
    arrange:         1. A forked repository.         2. A working application using repo-policy checks with one runner on the forked repository.
    act: Trigger a workflow dispatch that fails the repo policy check on a branch
     in the forked repository.
    assert: The workflow that was dispatched failed and the reason is logged.
    ","432517","test_dispatch_workflow_failure","tests.integration","Fri Dec 20 19:14:40 UTC 2024","passed","Fri Dec 20 19:21:53 UTC 2024","","test_charm_fork_repo","",""
