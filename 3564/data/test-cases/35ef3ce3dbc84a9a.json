{"uid":"35ef3ce3dbc84a9a","name":"test_jobmanager_reactive","fullName":"tests.integration.jobmanager.test_jobmanager_reactive#test_jobmanager_reactive","historyId":"bcfc000091d2ee52821e468a61bfae99","time":{},"description":"\n    Test reactive mode together with jobmanager.\n\n    Test that after putting a job in the queue that the runner is registered and the\n    job is picked up.\n\n    So,\n    1. Put job in the queue\n    2. Wait for runner to be registered\n    3. Wait for reactive process to ask for job status\n    4. Mark job deletable\n    5. Reconcile\n    6. Assert queue is empty\n    ","descriptionHtml":"<pre><code>Test reactive mode together with jobmanager.\n\nTest that after putting a job in the queue that the runner is registered and the\njob is picked up.\n\nSo,\n1. Put job in the queue\n2. Wait for runner to be registered\n3. Wait for reactive process to ask for job status\n4. Mark job deletable\n5. Reconcile\n6. Assert queue is empty\n</code></pre>\n","status":"unknown","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"abort_on_fail"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"openstack"},{"name":"parentSuite","value":"tests.integration.jobmanager"},{"name":"suite","value":"test_jobmanager_reactive"},{"name":"host","value":"github-runner"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.jobmanager.test_jobmanager_reactive"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["asyncio","abort_on_fail","openstack"]},"source":"35ef3ce3dbc84a9a.json","parameterValues":[]}