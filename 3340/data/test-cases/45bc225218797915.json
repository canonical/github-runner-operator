{"uid":"45bc225218797915","name":"test_flush_runner_and_resource_config","fullName":"tests.integration.test_charm_runner#test_flush_runner_and_resource_config","historyId":"67136ca3912cd0242f3fc7742c7d8c81","time":{},"description":"\n    arrange: A working application with two runners.\n    act:\n        1. Run Check_runner action. Record the runner names for later.\n        2. Flush runners.\n        3. Dispatch a workflow to make runner busy and call flush_runner action.\n\n    assert:\n        1. Two runner exists.\n        2. Runners are recreated.\n        3. The runner is not flushed since by default it flushes idle.\n\n    Test are combined to reduce number of runner spawned.\n    ","descriptionHtml":"<pre><code>arrange: A working application with two runners.\nact:\n    1. Run Check_runner action. Record the runner names for later.\n    2. Flush runners.\n    3. Dispatch a workflow to make runner busy and call flush_runner action.\n\nassert:\n    1. Two runner exists.\n    2. Runners are recreated.\n    3. The runner is not flushed since by default it flushes idle.\n\nTest are combined to reduce number of runner spawned.\n</code></pre>\n","status":"unknown","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"abort_on_fail"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"openstack"},{"name":"parentSuite","value":"tests.integration"},{"name":"suite","value":"test_charm_runner"},{"name":"host","value":"github-runner"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.test_charm_runner"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["asyncio","abort_on_fail","openstack"]},"source":"45bc225218797915.json","parameterValues":[]}