name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    inputs:
      upload_results:
        description: "Upload SARIF and SBOM results"
        required: false
        type: boolean
        default: false

env:
  # This value is used for push and pull_request triggers
  UPLOAD_RESULTS: true

jobs:
  trivy-scan:
    name: Run Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy scan for logs
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: "trivy.yaml"

      - name: Run Trivy scan for SARIF report
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: "trivy.yaml"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload SARIF to GitHub Security tab
        if: (github.event_name == 'workflow_dispatch' && inputs.upload_results == true) || (github.event_name != 'workflow_dispatch' && env.UPLOAD_RESULTS == 'true')
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Upload diagnostic SARIF artifact
        if: (github.event_name == 'workflow_dispatch' && inputs.upload_results == true) || (github.event_name != 'workflow_dispatch' && env.UPLOAD_RESULTS == 'true')
        uses: actions/upload-artifact@v4
        with:
          name: sarif-report
          path: "trivy-results.sarif"
          retention-days: 7

  generate-sbom:
    name: Generate SBOM from Filesystem
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy to generate SBOM
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: "trivy.yaml"
          format: "spdx-json"
          output: "dependency-results.sbom.json"
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SBOM as an artifact
        if: (github.event_name == 'workflow_dispatch' && inputs.upload_results == true) || (github.event_name != 'workflow_dispatch' && env.UPLOAD_RESULTS == 'true')
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: "dependency-results.sbom.json"
          retention-days: 7
